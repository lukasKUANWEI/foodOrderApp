{"ast":null,"code":"var _jsxFileName = \"/Users/lukasckw/Desktop/foodOrderApp/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https//friendlyeat-94369-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...@_@a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailableMeals, \"vL8MQdCMWCxTLY1OB6Q9GNnfZOA=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/lukasckw/Desktop/foodOrderApp/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useState","classes","Card","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","MealsLoading","MealsError","mealsList","map","meal"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAIA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAEO,SAAF,EAAaC,YAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAAES,SAAF,EAAaC,YAAb,IAA8BV,QAAQ,EAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,UAAU,GAAG,YAAY;AAC3B,YAAMC,QAAQ,GACV,MAAMC,KAAK,CAAC,iEAAD,CADf;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AAED,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAiC;AAC7BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACbC,UAAAA,EAAE,EAAEF,GADS;AAEbG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFX;AAGbC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHlB;AAIbC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJZ,SAAjB;AAMH;;AAEDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,KAxBD;;AA2BAG,IAAAA,UAAU,GAAGc,KAAb,CAAoBC,KAAD,IAAW;AAC1BlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACgB,KAAK,CAACC,OAAP,CAAZ;AACH,KAHD;AAMH,GAlCQ,EAkCN,EAlCM,CAAT;;AAoCA,MAAIpB,SAAJ,EAAe;AACX,wBACI;AAAS,MAAA,SAAS,EAAEN,OAAO,CAAC2B,YAA5B;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,MAAInB,SAAJ,EAAe;AACX,wBACI;AAAS,MAAA,SAAS,EAAER,OAAO,CAAC4B,UAA5B;AAAA,6BACI;AAAA,kBAAIpB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,QAAMqB,SAAS,GAAGzB,KAAK,CAAC0B,GAAN,CAAUC,IAAI,iBAC5B,QAAC,QAAD;AACI,IAAA,EAAE,EAAEA,IAAI,CAACX,EADb;AAGI,IAAA,IAAI,EAAEW,IAAI,CAACV,IAHf;AAII,IAAA,WAAW,EAAEU,IAAI,CAACT,WAJtB;AAKI,IAAA,KAAK,EAAES,IAAI,CAACR;AALhB,KAESQ,IAAI,CAACX,EAFd;AAAA;AAAA;AAAA;AAAA,UADc,CAAlB;AASA,sBACI;AAAS,IAAA,SAAS,EAAEpB,OAAO,CAACI,KAA5B;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI;AAAA,kBACKyB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA3ED;;GAAM1B,c;;KAAAA,c;AA6EN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\n\n\n\nconst AvailableMeals = () => {\n    const [ meals, setMeals ] = useState([]);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ httpError, setHttpError ] = useState();\n\n    useEffect(() => {\n        const fetchMeals = async () => {\n            const response =\n                await fetch('https//friendlyeat-94369-default-rtdb.firebaseio.com/meals.json');\n\n            if (!response.ok) {\n                throw new Error('Something went wrong');\n            }\n\n            const responseData = await response.json();\n\n            const loadedMeals = [];\n\n            for (const key in responseData)  {\n                loadedMeals.push({\n                    id: key,\n                    name: responseData[key].name,\n                    description: responseData[key].description,\n                    price: responseData[key].price,\n                });\n            }\n\n            setMeals(loadedMeals);\n            setIsLoading(false);\n\n        };\n\n\n        fetchMeals().catch((error) => {\n            setIsLoading(false);\n            setHttpError(error.message);\n        });\n\n\n    }, []);\n\n    if (isLoading) {\n        return (\n            <section className={classes.MealsLoading}>\n                <p>Loading...@_@a</p>\n            </section>\n        )\n    }\n\n    if (httpError) {\n        return (\n            <section className={classes.MealsError}>\n                <p>{httpError}</p>\n            </section>\n        )\n    }\n\n    const mealsList = meals.map(meal =>\n        <MealItem\n            id={meal.id}\n            key={meal.id}\n            name={meal.name}\n            description={meal.description}\n            price={meal.price}\n        />);\n\n    return (\n        <section className={classes.meals}>\n            <Card>\n                <ul>\n                    {mealsList}\n                </ul>\n            </Card>\n        </section>\n    );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}